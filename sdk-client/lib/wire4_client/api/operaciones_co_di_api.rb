=begin
#Wire4RestAPI

#Referencia de API. La API de Wire4 está organizada en torno a REST

OpenAPI spec version: 1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.10

=end

require 'uri'

module Wire4Client
  class OperacionesCoDiApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Consulta de operaciones
    # Obtiene las operaciones generadas a partir de peticiones de pago CODI® de forma paginada, pudiendo aplicar filtros.
    # @param authorization Header para token
    # @param [Hash] opts the optional parameters
    # @option opts [String] :company_id Es el identificador de empresa CODI®.
    # @option opts [String] :page Es el número de pago. (default to 0)
    # @option opts [CodiOperationsFiltersRequestDTO] :request_filters Filtros de busqueda
    # @option opts [String] :sales_point_id Es el identificador del punto de venta.
    # @option opts [String] :size Es el tamaño de página. (default to 20)
    # @return [PagerResponseDto]
    def consult_codi_operations(authorization, opts = {})
      data, _status_code, _headers = consult_codi_operations_with_http_info(authorization, opts)
      data
    end

    # Consulta de operaciones
    # Obtiene las operaciones generadas a partir de peticiones de pago CODI® de forma paginada, pudiendo aplicar filtros.
    # @param authorization Header para token
    # @param [Hash] opts the optional parameters
    # @option opts [String] :company_id Es el identificador de empresa CODI®.
    # @option opts [String] :page Es el número de pago.
    # @option opts [CodiOperationsFiltersRequestDTO] :request_filters Filtros de busqueda
    # @option opts [String] :sales_point_id Es el identificador del punto de venta.
    # @option opts [String] :size Es el tamaño de página.
    # @return [Array<(PagerResponseDto, Fixnum, Hash)>] PagerResponseDto data, response status code and response headers
    def consult_codi_operations_with_http_info(authorization, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: OperacionesCoDiApi.consult_codi_operations ...'
      end
      # verify the required parameter 'authorization' is set
      if @api_client.config.client_side_validation && authorization.nil?
        fail ArgumentError, "Missing the required parameter 'authorization' when calling OperacionesCoDiApi.consult_codi_operations"
      end
      # resource path
      local_var_path = '/codi/charges'

      # query parameters
      query_params = {}
      query_params[:'company_id'] = opts[:'company_id'] if !opts[:'company_id'].nil?
      query_params[:'page'] = opts[:'page'] if !opts[:'page'].nil?
      query_params[:'sales_point_id'] = opts[:'sales_point_id'] if !opts[:'sales_point_id'].nil?
      query_params[:'size'] = opts[:'size'] if !opts[:'size'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])
      header_params[:'Authorization'] = authorization

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(opts[:'request_filters'])
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PagerResponseDto')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: OperacionesCoDiApi#consult_codi_operations\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
