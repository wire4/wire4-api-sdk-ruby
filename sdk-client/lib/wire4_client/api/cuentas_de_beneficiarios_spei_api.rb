=begin
#Wire4RestAPI

#Referencia de la API de Wire4

OpenAPI spec version: 1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.10

=end

require 'uri'

module Wire4Client
  class CuentasDeBeneficiariosSPEIApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Elimina la cuenta del beneficiario
    # Borra la cuenta de beneficiario proporcionada relacionada al contrato perteneciente a la subscripción. La cuenta a borrar debe ser una cuenta que opere con SPEI.
    # @param authorization Header para token
    # @param account La cuenta del beneciario que será eliminada
    # @param subscription El identificador de la suscripción a esta API
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def delete_account_using_delete(authorization, account, subscription, opts = {})
      delete_account_using_delete_with_http_info(authorization, account, subscription, opts)
      nil
    end

    # Elimina la cuenta del beneficiario
    # Borra la cuenta de beneficiario proporcionada relacionada al contrato perteneciente a la subscripción. La cuenta a borrar debe ser una cuenta que opere con SPEI.
    # @param authorization Header para token
    # @param account La cuenta del beneciario que será eliminada
    # @param subscription El identificador de la suscripción a esta API
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def delete_account_using_delete_with_http_info(authorization, account, subscription, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CuentasDeBeneficiariosSPEIApi.delete_account_using_delete ...'
      end
      # verify the required parameter 'authorization' is set
      if @api_client.config.client_side_validation && authorization.nil?
        fail ArgumentError, "Missing the required parameter 'authorization' when calling CuentasDeBeneficiariosSPEIApi.delete_account_using_delete"
      end
      # verify the required parameter 'account' is set
      if @api_client.config.client_side_validation && account.nil?
        fail ArgumentError, "Missing the required parameter 'account' when calling CuentasDeBeneficiariosSPEIApi.delete_account_using_delete"
      end
      if @api_client.config.client_side_validation && account.to_s.length > 18
        fail ArgumentError, 'invalid value for "account" when calling CuentasDeBeneficiariosSPEIApi.delete_account_using_delete, the character length must be smaller than or equal to 18.'
      end

      if @api_client.config.client_side_validation && account.to_s.length < 10
        fail ArgumentError, 'invalid value for "account" when calling CuentasDeBeneficiariosSPEIApi.delete_account_using_delete, the character length must be great than or equal to 10.'
      end

      # verify the required parameter 'subscription' is set
      if @api_client.config.client_side_validation && subscription.nil?
        fail ArgumentError, "Missing the required parameter 'subscription' when calling CuentasDeBeneficiariosSPEIApi.delete_account_using_delete"
      end
      if @api_client.config.client_side_validation && subscription.to_s.length > 36
        fail ArgumentError, 'invalid value for "subscription" when calling CuentasDeBeneficiariosSPEIApi.delete_account_using_delete, the character length must be smaller than or equal to 36.'
      end

      if @api_client.config.client_side_validation && subscription.to_s.length < 36
        fail ArgumentError, 'invalid value for "subscription" when calling CuentasDeBeneficiariosSPEIApi.delete_account_using_delete, the character length must be great than or equal to 36.'
      end

      if @api_client.config.client_side_validation && subscription !~ Regexp.new(/[A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[34][A-Fa-f0-9]{3}-[89ab][A-Fa-f0-9]{3}-[A-Fa-f0-9]{12}$/)
        fail ArgumentError, "invalid value for 'subscription' when calling CuentasDeBeneficiariosSPEIApi.delete_account_using_delete, must conform to the pattern /[A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[34][A-Fa-f0-9]{3}-[89ab][A-Fa-f0-9]{3}-[A-Fa-f0-9]{12}$/."
      end

      # resource path
      local_var_path = '/subscriptions/{subscription}/beneficiaries/spei/{account}'.sub('{' + 'account' + '}', account.to_s).sub('{' + 'subscription' + '}', subscription.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'Authorization'] = authorization

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CuentasDeBeneficiariosSPEIApi#delete_account_using_delete\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Consulta de relaciones
    # Obtiene las posibles relaciones existentes para registrar beneficiarios en Monex. Se debe invocar este recurso antes de pre-registrar una cuenta de beneficiario.
    # @param authorization Header para token
    # @param subscription Identificador de la suscripción a esta API
    # @param [Hash] opts the optional parameters
    # @return [RelationshipsResponse]
    def get_available_relationships_monex_using_get(authorization, subscription, opts = {})
      data, _status_code, _headers = get_available_relationships_monex_using_get_with_http_info(authorization, subscription, opts)
      data
    end

    # Consulta de relaciones
    # Obtiene las posibles relaciones existentes para registrar beneficiarios en Monex. Se debe invocar este recurso antes de pre-registrar una cuenta de beneficiario.
    # @param authorization Header para token
    # @param subscription Identificador de la suscripción a esta API
    # @param [Hash] opts the optional parameters
    # @return [Array<(RelationshipsResponse, Fixnum, Hash)>] RelationshipsResponse data, response status code and response headers
    def get_available_relationships_monex_using_get_with_http_info(authorization, subscription, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CuentasDeBeneficiariosSPEIApi.get_available_relationships_monex_using_get ...'
      end
      # verify the required parameter 'authorization' is set
      if @api_client.config.client_side_validation && authorization.nil?
        fail ArgumentError, "Missing the required parameter 'authorization' when calling CuentasDeBeneficiariosSPEIApi.get_available_relationships_monex_using_get"
      end
      # verify the required parameter 'subscription' is set
      if @api_client.config.client_side_validation && subscription.nil?
        fail ArgumentError, "Missing the required parameter 'subscription' when calling CuentasDeBeneficiariosSPEIApi.get_available_relationships_monex_using_get"
      end
      if @api_client.config.client_side_validation && subscription.to_s.length > 36
        fail ArgumentError, 'invalid value for "subscription" when calling CuentasDeBeneficiariosSPEIApi.get_available_relationships_monex_using_get, the character length must be smaller than or equal to 36.'
      end

      if @api_client.config.client_side_validation && subscription.to_s.length < 36
        fail ArgumentError, 'invalid value for "subscription" when calling CuentasDeBeneficiariosSPEIApi.get_available_relationships_monex_using_get, the character length must be great than or equal to 36.'
      end

      if @api_client.config.client_side_validation && subscription !~ Regexp.new(/[A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[34][A-Fa-f0-9]{3}-[89ab][A-Fa-f0-9]{3}-[A-Fa-f0-9]{12}$/)
        fail ArgumentError, "invalid value for 'subscription' when calling CuentasDeBeneficiariosSPEIApi.get_available_relationships_monex_using_get, must conform to the pattern /[A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[34][A-Fa-f0-9]{3}-[89ab][A-Fa-f0-9]{3}-[A-Fa-f0-9]{12}$/."
      end

      # resource path
      local_var_path = '/subscriptions/{subscription}/beneficiaries/relationships'.sub('{' + 'subscription' + '}', subscription.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'Authorization'] = authorization

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'RelationshipsResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CuentasDeBeneficiariosSPEIApi#get_available_relationships_monex_using_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Consulta los beneficiarios por el identificador de la petición de registro
    # Obtiene los beneficiarios enviados para registro en una petición al contrato relacionado con la suscripción, Los beneficiarios son los que actualmente se encuentran registrados en banca Monex, que pertenezcan a la petición que se solicita.
    # @param authorization Header para token
    # @param request_id El identificador de la petición del registro de beneficiarios a esta API
    # @param subscription El identificador de la suscripción a esta API
    # @param [Hash] opts the optional parameters
    # @return [BeneficiariesResponse]
    def get_beneficiaries_by_request_id(authorization, request_id, subscription, opts = {})
      data, _status_code, _headers = get_beneficiaries_by_request_id_with_http_info(authorization, request_id, subscription, opts)
      data
    end

    # Consulta los beneficiarios por el identificador de la petición de registro
    # Obtiene los beneficiarios enviados para registro en una petición al contrato relacionado con la suscripción, Los beneficiarios son los que actualmente se encuentran registrados en banca Monex, que pertenezcan a la petición que se solicita.
    # @param authorization Header para token
    # @param request_id El identificador de la petición del registro de beneficiarios a esta API
    # @param subscription El identificador de la suscripción a esta API
    # @param [Hash] opts the optional parameters
    # @return [Array<(BeneficiariesResponse, Fixnum, Hash)>] BeneficiariesResponse data, response status code and response headers
    def get_beneficiaries_by_request_id_with_http_info(authorization, request_id, subscription, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CuentasDeBeneficiariosSPEIApi.get_beneficiaries_by_request_id ...'
      end
      # verify the required parameter 'authorization' is set
      if @api_client.config.client_side_validation && authorization.nil?
        fail ArgumentError, "Missing the required parameter 'authorization' when calling CuentasDeBeneficiariosSPEIApi.get_beneficiaries_by_request_id"
      end
      # verify the required parameter 'request_id' is set
      if @api_client.config.client_side_validation && request_id.nil?
        fail ArgumentError, "Missing the required parameter 'request_id' when calling CuentasDeBeneficiariosSPEIApi.get_beneficiaries_by_request_id"
      end
      if @api_client.config.client_side_validation && request_id.to_s.length > 36
        fail ArgumentError, 'invalid value for "request_id" when calling CuentasDeBeneficiariosSPEIApi.get_beneficiaries_by_request_id, the character length must be smaller than or equal to 36.'
      end

      if @api_client.config.client_side_validation && request_id.to_s.length < 36
        fail ArgumentError, 'invalid value for "request_id" when calling CuentasDeBeneficiariosSPEIApi.get_beneficiaries_by_request_id, the character length must be great than or equal to 36.'
      end

      if @api_client.config.client_side_validation && request_id !~ Regexp.new(/[A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[34][A-Fa-f0-9]{3}-[89ab][A-Fa-f0-9]{3}-[A-Fa-f0-9]{12}$/)
        fail ArgumentError, "invalid value for 'request_id' when calling CuentasDeBeneficiariosSPEIApi.get_beneficiaries_by_request_id, must conform to the pattern /[A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[34][A-Fa-f0-9]{3}-[89ab][A-Fa-f0-9]{3}-[A-Fa-f0-9]{12}$/."
      end

      # verify the required parameter 'subscription' is set
      if @api_client.config.client_side_validation && subscription.nil?
        fail ArgumentError, "Missing the required parameter 'subscription' when calling CuentasDeBeneficiariosSPEIApi.get_beneficiaries_by_request_id"
      end
      if @api_client.config.client_side_validation && subscription.to_s.length > 36
        fail ArgumentError, 'invalid value for "subscription" when calling CuentasDeBeneficiariosSPEIApi.get_beneficiaries_by_request_id, the character length must be smaller than or equal to 36.'
      end

      if @api_client.config.client_side_validation && subscription.to_s.length < 36
        fail ArgumentError, 'invalid value for "subscription" when calling CuentasDeBeneficiariosSPEIApi.get_beneficiaries_by_request_id, the character length must be great than or equal to 36.'
      end

      if @api_client.config.client_side_validation && subscription !~ Regexp.new(/[A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[34][A-Fa-f0-9]{3}-[89ab][A-Fa-f0-9]{3}-[A-Fa-f0-9]{12}$/)
        fail ArgumentError, "invalid value for 'subscription' when calling CuentasDeBeneficiariosSPEIApi.get_beneficiaries_by_request_id, must conform to the pattern /[A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[34][A-Fa-f0-9]{3}-[89ab][A-Fa-f0-9]{3}-[A-Fa-f0-9]{12}$/."
      end

      # resource path
      local_var_path = '/subscriptions/{subscription}/beneficiaries/spei/{requestId}'.sub('{' + 'requestId' + '}', request_id.to_s).sub('{' + 'subscription' + '}', subscription.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'Authorization'] = authorization

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'BeneficiariesResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CuentasDeBeneficiariosSPEIApi#get_beneficiaries_by_request_id\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Consulta los beneficiarios registrados
    # Obtiene los beneficiarios registrados al contrato relacionado con la suscripción, Los beneficiarios son los que actualmente se encuentran registrados en banca Monex.
    # @param authorization Header para token
    # @param subscription El identificador de la suscripción a esta API
    # @param [Hash] opts the optional parameters
    # @option opts [String] :account Cuenta del beneficiario, puede ser Clabe, TDD o Celular
    # @option opts [String] :rfc RFC del beneficiario
    # @return [BeneficiariesResponse]
    def get_beneficiaries_for_account_using_get(authorization, subscription, opts = {})
      data, _status_code, _headers = get_beneficiaries_for_account_using_get_with_http_info(authorization, subscription, opts)
      data
    end

    # Consulta los beneficiarios registrados
    # Obtiene los beneficiarios registrados al contrato relacionado con la suscripción, Los beneficiarios son los que actualmente se encuentran registrados en banca Monex.
    # @param authorization Header para token
    # @param subscription El identificador de la suscripción a esta API
    # @param [Hash] opts the optional parameters
    # @option opts [String] :account Cuenta del beneficiario, puede ser Clabe, TDD o Celular
    # @option opts [String] :rfc RFC del beneficiario
    # @return [Array<(BeneficiariesResponse, Fixnum, Hash)>] BeneficiariesResponse data, response status code and response headers
    def get_beneficiaries_for_account_using_get_with_http_info(authorization, subscription, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CuentasDeBeneficiariosSPEIApi.get_beneficiaries_for_account_using_get ...'
      end
      # verify the required parameter 'authorization' is set
      if @api_client.config.client_side_validation && authorization.nil?
        fail ArgumentError, "Missing the required parameter 'authorization' when calling CuentasDeBeneficiariosSPEIApi.get_beneficiaries_for_account_using_get"
      end
      # verify the required parameter 'subscription' is set
      if @api_client.config.client_side_validation && subscription.nil?
        fail ArgumentError, "Missing the required parameter 'subscription' when calling CuentasDeBeneficiariosSPEIApi.get_beneficiaries_for_account_using_get"
      end
      if @api_client.config.client_side_validation && subscription.to_s.length > 36
        fail ArgumentError, 'invalid value for "subscription" when calling CuentasDeBeneficiariosSPEIApi.get_beneficiaries_for_account_using_get, the character length must be smaller than or equal to 36.'
      end

      if @api_client.config.client_side_validation && subscription.to_s.length < 36
        fail ArgumentError, 'invalid value for "subscription" when calling CuentasDeBeneficiariosSPEIApi.get_beneficiaries_for_account_using_get, the character length must be great than or equal to 36.'
      end

      if @api_client.config.client_side_validation && subscription !~ Regexp.new(/[A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[34][A-Fa-f0-9]{3}-[89ab][A-Fa-f0-9]{3}-[A-Fa-f0-9]{12}$/)
        fail ArgumentError, "invalid value for 'subscription' when calling CuentasDeBeneficiariosSPEIApi.get_beneficiaries_for_account_using_get, must conform to the pattern /[A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[34][A-Fa-f0-9]{3}-[89ab][A-Fa-f0-9]{3}-[A-Fa-f0-9]{12}$/."
      end

      # resource path
      local_var_path = '/subscriptions/{subscription}/beneficiaries/spei'.sub('{' + 'subscription' + '}', subscription.to_s)

      # query parameters
      query_params = {}
      query_params[:'account'] = opts[:'account'] if !opts[:'account'].nil?
      query_params[:'rfc'] = opts[:'rfc'] if !opts[:'rfc'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'Authorization'] = authorization

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'BeneficiariesResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CuentasDeBeneficiariosSPEIApi#get_beneficiaries_for_account_using_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Pre-registro de cuentas de beneficiarios.
    # Pre-registra una o más cuentas de beneficiario en la plataforma, proporcionando una URL donde el cuentahabiente Monex debe ingresar un valor de su llave digital para confirmar el alta de las cuentas de beneficiarios.<br/>Los posibles valores de <i>relationship</i> y <i>kind_of_relationship</i> se deben  obtener de /subscriptions/{subscription}/beneficiaries/relationships.<br/><br/>La confirmación de registro en Monex se realiza a través de una llamada a los webhooks registrados con el evento ACCOUNT.CREATED.
    # @param authorization Header para token
    # @param request_dto Información de la cuenta del beneficiario
    # @param subscription El identificador de la suscripción a esta API
    # @param [Hash] opts the optional parameters
    # @return [TokenRequiredResponse]
    def pre_register_accounts_using_post(authorization, request_dto, subscription, opts = {})
      data, _status_code, _headers = pre_register_accounts_using_post_with_http_info(authorization, request_dto, subscription, opts)
      data
    end

    # Pre-registro de cuentas de beneficiarios.
    # Pre-registra una o más cuentas de beneficiario en la plataforma, proporcionando una URL donde el cuentahabiente Monex debe ingresar un valor de su llave digital para confirmar el alta de las cuentas de beneficiarios.&lt;br/&gt;Los posibles valores de &lt;i&gt;relationship&lt;/i&gt; y &lt;i&gt;kind_of_relationship&lt;/i&gt; se deben  obtener de /subscriptions/{subscription}/beneficiaries/relationships.&lt;br/&gt;&lt;br/&gt;La confirmación de registro en Monex se realiza a través de una llamada a los webhooks registrados con el evento ACCOUNT.CREATED.
    # @param authorization Header para token
    # @param request_dto Información de la cuenta del beneficiario
    # @param subscription El identificador de la suscripción a esta API
    # @param [Hash] opts the optional parameters
    # @return [Array<(TokenRequiredResponse, Fixnum, Hash)>] TokenRequiredResponse data, response status code and response headers
    def pre_register_accounts_using_post_with_http_info(authorization, request_dto, subscription, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CuentasDeBeneficiariosSPEIApi.pre_register_accounts_using_post ...'
      end
      # verify the required parameter 'authorization' is set
      if @api_client.config.client_side_validation && authorization.nil?
        fail ArgumentError, "Missing the required parameter 'authorization' when calling CuentasDeBeneficiariosSPEIApi.pre_register_accounts_using_post"
      end
      # verify the required parameter 'request_dto' is set
      if @api_client.config.client_side_validation && request_dto.nil?
        fail ArgumentError, "Missing the required parameter 'request_dto' when calling CuentasDeBeneficiariosSPEIApi.pre_register_accounts_using_post"
      end
      # verify the required parameter 'subscription' is set
      if @api_client.config.client_side_validation && subscription.nil?
        fail ArgumentError, "Missing the required parameter 'subscription' when calling CuentasDeBeneficiariosSPEIApi.pre_register_accounts_using_post"
      end
      if @api_client.config.client_side_validation && subscription.to_s.length > 36
        fail ArgumentError, 'invalid value for "subscription" when calling CuentasDeBeneficiariosSPEIApi.pre_register_accounts_using_post, the character length must be smaller than or equal to 36.'
      end

      if @api_client.config.client_side_validation && subscription.to_s.length < 36
        fail ArgumentError, 'invalid value for "subscription" when calling CuentasDeBeneficiariosSPEIApi.pre_register_accounts_using_post, the character length must be great than or equal to 36.'
      end

      if @api_client.config.client_side_validation && subscription !~ Regexp.new(/[A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[34][A-Fa-f0-9]{3}-[89ab][A-Fa-f0-9]{3}-[A-Fa-f0-9]{12}$/)
        fail ArgumentError, "invalid value for 'subscription' when calling CuentasDeBeneficiariosSPEIApi.pre_register_accounts_using_post, must conform to the pattern /[A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[34][A-Fa-f0-9]{3}-[89ab][A-Fa-f0-9]{3}-[A-Fa-f0-9]{12}$/."
      end

      # resource path
      local_var_path = '/subscriptions/{subscription}/beneficiaries/spei'.sub('{' + 'subscription' + '}', subscription.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])
      header_params[:'Authorization'] = authorization

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(request_dto)
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'TokenRequiredResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CuentasDeBeneficiariosSPEIApi#pre_register_accounts_using_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Eliminación de beneficiarios SPEI® sin confirmar
    # Elimina un conjunto de beneficiarios a registrar en la cuenta del cliente Monex relacionada a la suscripción, los beneficiarios no deben haber sido confirmados por el cliente.
    # @param authorization Header para token
    # @param request_id Identificador de los beneficiarios a eliminar
    # @param subscription El identificador de la suscripción a esta API
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def remove_beneficiaries_pending_using_delete(authorization, request_id, subscription, opts = {})
      remove_beneficiaries_pending_using_delete_with_http_info(authorization, request_id, subscription, opts)
      nil
    end

    # Eliminación de beneficiarios SPEI® sin confirmar
    # Elimina un conjunto de beneficiarios a registrar en la cuenta del cliente Monex relacionada a la suscripción, los beneficiarios no deben haber sido confirmados por el cliente.
    # @param authorization Header para token
    # @param request_id Identificador de los beneficiarios a eliminar
    # @param subscription El identificador de la suscripción a esta API
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def remove_beneficiaries_pending_using_delete_with_http_info(authorization, request_id, subscription, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CuentasDeBeneficiariosSPEIApi.remove_beneficiaries_pending_using_delete ...'
      end
      # verify the required parameter 'authorization' is set
      if @api_client.config.client_side_validation && authorization.nil?
        fail ArgumentError, "Missing the required parameter 'authorization' when calling CuentasDeBeneficiariosSPEIApi.remove_beneficiaries_pending_using_delete"
      end
      # verify the required parameter 'request_id' is set
      if @api_client.config.client_side_validation && request_id.nil?
        fail ArgumentError, "Missing the required parameter 'request_id' when calling CuentasDeBeneficiariosSPEIApi.remove_beneficiaries_pending_using_delete"
      end
      if @api_client.config.client_side_validation && request_id !~ Regexp.new(/[A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[34][A-Fa-f0-9]{3}-[89ab][A-Fa-f0-9]{3}-[A-Fa-f0-9]{12}$/)
        fail ArgumentError, "invalid value for 'request_id' when calling CuentasDeBeneficiariosSPEIApi.remove_beneficiaries_pending_using_delete, must conform to the pattern /[A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[34][A-Fa-f0-9]{3}-[89ab][A-Fa-f0-9]{3}-[A-Fa-f0-9]{12}$/."
      end

      # verify the required parameter 'subscription' is set
      if @api_client.config.client_side_validation && subscription.nil?
        fail ArgumentError, "Missing the required parameter 'subscription' when calling CuentasDeBeneficiariosSPEIApi.remove_beneficiaries_pending_using_delete"
      end
      if @api_client.config.client_side_validation && subscription !~ Regexp.new(/[A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[34][A-Fa-f0-9]{3}-[89ab][A-Fa-f0-9]{3}-[A-Fa-f0-9]{12}$/)
        fail ArgumentError, "invalid value for 'subscription' when calling CuentasDeBeneficiariosSPEIApi.remove_beneficiaries_pending_using_delete, must conform to the pattern /[A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[34][A-Fa-f0-9]{3}-[89ab][A-Fa-f0-9]{3}-[A-Fa-f0-9]{12}$/."
      end

      # resource path
      local_var_path = '/subscriptions/{subscription}/beneficiaries/spei/request/{requestId}'.sub('{' + 'requestId' + '}', request_id.to_s).sub('{' + 'subscription' + '}', subscription.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'Authorization'] = authorization

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CuentasDeBeneficiariosSPEIApi#remove_beneficiaries_pending_using_delete\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Actualiza el monto límite
    # Actualiza el monto límite a la cuenta de beneficiario proporcionada relacionada al contrato perteneciente a la subscripción.
    # @param authorization Header para token
    # @param account Cuenta a actualizar
    # @param request_dto Información de la cuenta y el monto límite a actualizar
    # @param subscription El identificador de la suscripción a esta API
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def update_amount_limit_account_using_put(authorization, account, request_dto, subscription, opts = {})
      update_amount_limit_account_using_put_with_http_info(authorization, account, request_dto, subscription, opts)
      nil
    end

    # Actualiza el monto límite
    # Actualiza el monto límite a la cuenta de beneficiario proporcionada relacionada al contrato perteneciente a la subscripción.
    # @param authorization Header para token
    # @param account Cuenta a actualizar
    # @param request_dto Información de la cuenta y el monto límite a actualizar
    # @param subscription El identificador de la suscripción a esta API
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def update_amount_limit_account_using_put_with_http_info(authorization, account, request_dto, subscription, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CuentasDeBeneficiariosSPEIApi.update_amount_limit_account_using_put ...'
      end
      # verify the required parameter 'authorization' is set
      if @api_client.config.client_side_validation && authorization.nil?
        fail ArgumentError, "Missing the required parameter 'authorization' when calling CuentasDeBeneficiariosSPEIApi.update_amount_limit_account_using_put"
      end
      # verify the required parameter 'account' is set
      if @api_client.config.client_side_validation && account.nil?
        fail ArgumentError, "Missing the required parameter 'account' when calling CuentasDeBeneficiariosSPEIApi.update_amount_limit_account_using_put"
      end
      if @api_client.config.client_side_validation && account.to_s.length > 18
        fail ArgumentError, 'invalid value for "account" when calling CuentasDeBeneficiariosSPEIApi.update_amount_limit_account_using_put, the character length must be smaller than or equal to 18.'
      end

      if @api_client.config.client_side_validation && account.to_s.length < 10
        fail ArgumentError, 'invalid value for "account" when calling CuentasDeBeneficiariosSPEIApi.update_amount_limit_account_using_put, the character length must be great than or equal to 10.'
      end

      # verify the required parameter 'request_dto' is set
      if @api_client.config.client_side_validation && request_dto.nil?
        fail ArgumentError, "Missing the required parameter 'request_dto' when calling CuentasDeBeneficiariosSPEIApi.update_amount_limit_account_using_put"
      end
      # verify the required parameter 'subscription' is set
      if @api_client.config.client_side_validation && subscription.nil?
        fail ArgumentError, "Missing the required parameter 'subscription' when calling CuentasDeBeneficiariosSPEIApi.update_amount_limit_account_using_put"
      end
      if @api_client.config.client_side_validation && subscription.to_s.length > 36
        fail ArgumentError, 'invalid value for "subscription" when calling CuentasDeBeneficiariosSPEIApi.update_amount_limit_account_using_put, the character length must be smaller than or equal to 36.'
      end

      if @api_client.config.client_side_validation && subscription.to_s.length < 36
        fail ArgumentError, 'invalid value for "subscription" when calling CuentasDeBeneficiariosSPEIApi.update_amount_limit_account_using_put, the character length must be great than or equal to 36.'
      end

      if @api_client.config.client_side_validation && subscription !~ Regexp.new(/[A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[34][A-Fa-f0-9]{3}-[89ab][A-Fa-f0-9]{3}-[A-Fa-f0-9]{12}$/)
        fail ArgumentError, "invalid value for 'subscription' when calling CuentasDeBeneficiariosSPEIApi.update_amount_limit_account_using_put, must conform to the pattern /[A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[34][A-Fa-f0-9]{3}-[89ab][A-Fa-f0-9]{3}-[A-Fa-f0-9]{12}$/."
      end

      # resource path
      local_var_path = '/subscriptions/{subscription}/beneficiaries/spei/{account}'.sub('{' + 'account' + '}', account.to_s).sub('{' + 'subscription' + '}', subscription.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])
      header_params[:'Authorization'] = authorization

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(request_dto)
      auth_names = []
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CuentasDeBeneficiariosSPEIApi#update_amount_limit_account_using_put\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
