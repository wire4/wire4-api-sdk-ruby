=begin
#Wire4RestAPI

#Referencia de API. La API de Wire4 está organizada en torno a REST

OpenAPI spec version: 1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.10

=end

require 'spec_helper'
require 'json'

# Unit tests for Wire4Client::CuentasDeBeneficiariosSPEIApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'CuentasDeBeneficiariosSPEIApi' do
  before do
    # run before each test
    @instance = Wire4Client::CuentasDeBeneficiariosSPEIApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of CuentasDeBeneficiariosSPEIApi' do
    it 'should create an instance of CuentasDeBeneficiariosSPEIApi' do
      expect(@instance).to be_instance_of(Wire4Client::CuentasDeBeneficiariosSPEIApi)
    end
  end

  # unit tests for authorize_accounts_pending_put
  # Solicitud para agrupar cuentas de beneficiarios SPEI/SPID en estado pendiente.
  # Solicta la agrupación de las cuentas de beneficiarios en estado pendiente para que sean autorizadas,  para ello se crea un conjunto de éstas que puede incluir tanto de SPEI como de SPID. Además se debe indicar las urls de redirección en caso de error y éxito
  # @param authorization Header para token
  # @param subscription Es el identificador de la suscripción a esta API.
  # @param urls_redirect_dto Información de la cuenta del beneficiario
  # @param [Hash] opts the optional parameters
  # @return [AuthorizedBeneficiariesResponse]
  describe 'authorize_accounts_pending_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_account_using_delete
  # Elimina la cuenta del beneficiario
  # Elimina la cuenta de beneficiario proporcionada relacionada al contrato perteneciente a la suscripción. La cuenta a borrar debe ser una que opere con SPEI.
  # @param authorization Header para token
  # @param account Es la cuenta del beneficiario que será eliminada.
  # @param subscription Es el identificador de la suscripción a esta API.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_account_using_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_available_relationships_monex_using_get
  # Consulta de relaciones
  # Obtiene las posibles relaciones existentes para registrar beneficiarios en Monex. Se debe invocar este recurso antes de pre-registrar una cuenta de beneficiario.
  # @param authorization Header para token
  # @param subscription Es el identificador de la suscripción a esta API.
  # @param [Hash] opts the optional parameters
  # @return [RelationshipsResponse]
  describe 'get_available_relationships_monex_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_beneficiaries_by_request_id
  # Consulta los beneficiarios por el identificador de la petición de registro
  # Obtiene los beneficiarios enviados para registro en una petición al contrato relacionado con la suscripción, Los beneficiarios son los que actualmente se encuentran registrados en banca Monex, que pertenezcan a la petición que se solicita.
  # @param authorization Header para token
  # @param request_id El identificador de la petición del registro de beneficiarios a esta API.
  # @param subscription Es el identificador de la suscripción a esta API.
  # @param [Hash] opts the optional parameters
  # @return [BeneficiariesResponse]
  describe 'get_beneficiaries_by_request_id test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_beneficiaries_for_account_using_get
  # Consulta los beneficiarios registrados
  # Obtiene los beneficiarios registrados al contrato relacionado con la suscripción, Los beneficiarios son los que actualmente se encuentran registrados en banca Monex.
  # @param authorization Header para token
  # @param subscription Es el identificador de la suscripción a esta API.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :account Es la cuenta del beneficiario, podría ser teléfono celular (es de 10 dígitos), Tarjeta de débito (TDD, es de 16 dígitos) o cuenta CLABE (es de 18 dígitos). &lt;br/&gt;&lt;br/&gt;Por ejemplo Teléfono celular: 5525072600, TDD: 4323 1234 5678 9123, CLABE: 032180000118359719.
  # @option opts [String] :beneficiary_bank Es la clave del banco beneficiario. Se puede obtener del recurso de las &lt;a href&#x3D;\&quot;#operation/getAllInstitutionsUsingGET\&quot;&gt;instituciones.&lt;/a&gt;
  # @option opts [String] :beneficiary_name Es el nombre del beneficiario.
  # @option opts [String] :end_date Es la fecha de inicio del perido a filtrar en formato dd-mm-yyyy.
  # @option opts [String] :init_date Es la fºecha de inicio del perido a filtrar en formato dd-mm-yyyy.
  # @option opts [String] :rfc Es el Registro Federal de Controbuyentes (RFC) del beneficiario.
  # @option opts [String] :status Es el estado (estatus) de la cuenta. Los valores pueden ser &lt;b&gt;PENDING&lt;/b&gt; y &lt;b&gt;REGISTERED&lt;/b&gt;.
  # @return [BeneficiariesResponse]
  describe 'get_beneficiaries_for_account_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for pre_register_accounts_using_post
  # Pre-registro de cuentas de beneficiarios SPEI®.
  # Pre-registra una o más cuentas de beneficiario en la plataforma de Wire4, ésta le proporcionará una URL donde lo llevará al centro de autorización para que el cuentahabiente Monex ingrese su llave digital para confirmar el alta de las cuentas de beneficiarios.&lt;br/&gt; Los posibles valores de &lt;em&gt;relationship&lt;/em&gt; y &lt;em&gt;kind_of_relationship&lt;/em&gt; se deben  obtener de &lt;a href&#x3D;\&quot;#operation/getAvailableRelationshipsMonexUsingGET\&quot;&gt;/subscriptions/{subscription}/beneficiaries/relationships.&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;La confirmación de registro en Monex se realizará a través de una notificación a los webhooks registrados con el evento de tipo &lt;a href&#x3D;\&quot;#section/Eventos/Tipos-de-Eventos\&quot;&gt;ACCOUNT.CREATED.&lt;/a&gt;
  # @param authorization Header para token
  # @param request_dto Información de la cuenta del beneficiario
  # @param subscription Es el identificador de la suscripción a esta API.
  # @param [Hash] opts the optional parameters
  # @return [TokenRequiredResponse]
  describe 'pre_register_accounts_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for remove_beneficiaries_pending_using_delete
  # Eliminación de beneficiarios SPEI® sin confirmar
  # Elimina uno o más beneficiarios que se encuentran en estado pendiente de confirmar (autorizar) de la cuenta del cliente Monex relacionada a la suscripción.
  # @param authorization Header para token
  # @param request_id Es el identificador con el que se dió de alta a los beneficiarios (viene en el cuerpo de la respuesta del &lt;a href&#x3D;\&quot;#operation/getAvailableRelationshipsMonexUsingGET\&quot;&gt;pre-registro de beneficiarios&lt;/a&gt;), los registros bajo éste campo van a ser eliminados.
  # @param subscription Es el identificador de la suscripción a esta API.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'remove_beneficiaries_pending_using_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_amount_limit_account_using_put
  # Solicitud para actualizar el monto límite de una cuenta
  # Se crea una solicitud para actualizar el monto límite a la cuenta de beneficiario proporcionada y relacionada al contrato perteneciente a la subscripción. Una vez enviada la solicitud se retornará una URl que lo llevará al centro de autorización para que el cuentahabiente Monex ingrese su llave digital para confirmar la actualización del monto límite. 
  # @param authorization Header para token
  # @param account Es la cuenta que va a ser actualizada.
  # @param request_dto Información de la cuenta y el monto límite a actualizar.
  # @param subscription Es el identificador de la suscripción a esta API.
  # @param [Hash] opts the optional parameters
  # @return [TokenRequiredResponse]
  describe 'update_amount_limit_account_using_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
