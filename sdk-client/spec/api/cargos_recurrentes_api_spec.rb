=begin
#Wire4RestAPI

#Referencia de la API de Wire4

OpenAPI spec version: 1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.10

=end

require 'spec_helper'
require 'json'

# Unit tests for Wire4Client::CargosRecurrentesApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'CargosRecurrentesApi' do
  before do
    # run before each test
    @instance = Wire4Client::CargosRecurrentesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of CargosRecurrentesApi' do
    it 'should create an instance of CargosRecurrentesApi' do
      expect(@instance).to be_instance_of(Wire4Client::CargosRecurrentesApi)
    end
  end

  # unit tests for delete_recurring_charge_using_delete
  # Cancelación/desubscripción de cargos recurrentes
  #  Se solicita la desuscripción de un cargo recurrente activo. En el request llevará el orderId que identifica el cargo recurrente a eliminar/dar de baja se deshabilitará tanto de openpay como del sistem wire4.&lt;br&gt; Nota: Debe considerar que para hacer uso de esta funcionalidad debe contar con un scope  especial
  # @param authorization Header para token
  # @param order_id orderId
  # @param [Hash] opts the optional parameters
  # @return [ConfirmRecurringCharge]
  describe 'delete_recurring_charge_using_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for register_recurring_charge_using_post
  # Registro de cargos recurrentes
  #  Se registra una solicitud para generar un plan de cargos recurrentes. En la respuesta se proporcionará una dirección URL que lo llevará al sitio donde se le solicitará ingresar los datos de tarjeta a la que se aplicarán los cargos de acuerdo al plan seleccionado.&lt;br&gt; Nota: Debe considerar que para hacer uso de esta funcionalidad debe contar con un scope  especial
  # @param authorization Header para token
  # @param request_recurring_charge Información de la solicitud para aplicar cargos recurrentes
  # @param [Hash] opts the optional parameters
  # @return [ConfirmRecurringCharge]
  describe 'register_recurring_charge_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
