=begin
#Wire4RestAPI

#Referencia de la API de Wire4

OpenAPI spec version: 1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.10

=end

require 'spec_helper'
require 'json'

# Unit tests for Wire4Client::ContractsDetailsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'ContractsDetailsApi' do
  before do
    # run before each test
    @instance = Wire4Client::ContractsDetailsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ContractsDetailsApi' do
    it 'should create an instance of ContractsDetailsApi' do
      expect(@instance).to be_instance_of(Wire4Client::ContractsDetailsApi)
    end
  end

  # unit tests for create_authorization
  # Devuelve la URL para autorización del usuario Monex
  # Se obtiene la URL para la autorización del usuario Monex.
  # @param authorization Header para token
  # @param pre_monex_authorization Información para la autorización
  # @param [Hash] opts the optional parameters
  # @return [TokenRequiredResponse]
  describe 'create_authorization test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for obtain_authorized_users
  # Obtiene los usuarios autorizados
  # Obtienen los detalles de los usuarios autorizados de Monex.
  # @param authorization Header para token
  # @param x_access_key La llave de acceso de la aplicación
  # @param request_id El identificador de la petición a esta API
  # @param [Hash] opts the optional parameters
  # @return [Array<AuthorizedUsers>]
  describe 'obtain_authorized_users test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for obtain_authorized_users_by_contract
  # Obtiene los usuarios autorizados por contrato
  # Obtienen los detalles de los usuarios autorizados por contrato Monex.
  # @param authorization Header para token
  # @param x_access_key La llave de acceso de la aplicación
  # @param [Hash] opts the optional parameters
  # @option opts [String] :contract El contrato Monex
  # @return [Array<AuthorizedUsers>]
  describe 'obtain_authorized_users_by_contract test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for obtain_contract_details
  # Obtiene los detalles de la empresa del contrato
  # Detalles de la compañía relacionada con el contrato de Monex.
  # @param authorization Header para token
  # @param x_access_key La llave de acceso de la aplicación
  # @param contract_detail_request Información para obtener los detalles de la companía
  # @param [Hash] opts the optional parameters
  # @return [ContractDetailResponse]
  describe 'obtain_contract_details test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
